{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Melisa Soldner\\\\OneDrive - Madison College\\\\Documents\\\\GitHub\\\\2024-spring-adf-fe\\\\tca-trash-pandas\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { createHashRouter, RouterProvider } from \"react-router-dom\";\nimport { Home } from './Home';\nimport { Play } from './Play';\nimport { Setup } from './Setup';\nimport { getLeaderboard } from './GameResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyGameResults = [{\n  winner: \"Tom\",\n  players: [\"Tom\", \"Batu\", \"Julia\", \"Melisa\", \"John\"]\n}, {\n  winner: \"John\",\n  players: [\"Batu\", \"Julia\", \"Melisa\", \"John\"]\n}, {\n  winner: \"John\",\n  players: [\"Tom\", \"Batu\", \"Julia\", \"Melisa\", \"John\"]\n}, {\n  winner: \"Harry\",\n  players: [\"Harry\", \"hermione\", \"Ron\"]\n}];\nconst App = () => {\n  _s();\n  const [gameResults, setGameResults] = useState([]);\n  const addNewGameResult = result => setGameResults([...gameResults, result]);\n  const router = createHashRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Home, {\n      leaderboardData: getLeaderboard(gameResults)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/setup\",\n    element: /*#__PURE__*/_jsxDEV(Setup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/play\",\n    element: /*#__PURE__*/_jsxDEV(Play, {\n      addNewGameResult: addNewGameResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this)\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App p-3\",\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"cQrAdGIC/d7JQWr9z0ekAhTo24E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","createHashRouter","RouterProvider","Home","Play","Setup","getLeaderboard","jsxDEV","_jsxDEV","dummyGameResults","winner","players","App","_s","gameResults","setGameResults","addNewGameResult","result","router","path","element","leaderboardData","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["C:/Users/Melisa Soldner/OneDrive - Madison College/Documents/GitHub/2024-spring-adf-fe/tca-trash-pandas/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  createHashRouter,\n  RouterProvider,\n} from \"react-router-dom\";\nimport { Home } from './Home'\nimport { Play } from './Play'\nimport { Setup } from './Setup'\nimport { GameResult, getLeaderboard } from './GameResults'\n\nconst dummyGameResults: GameResult[] = [\n  {\n    winner: \"Tom\"\n    , players: [\n      \"Tom\"\n      , \"Batu\"\n      , \"Julia\"\n      , \"Melisa\"\n      , \"John\"\n    ]\n  }\n  , {\n    winner: \"John\"\n    , players: [\n      \"Batu\"\n      , \"Julia\"\n      , \"Melisa\"\n      , \"John\"\n    ]\n  }\n  , {\n    winner: \"John\"\n    , players: [\n      \"Tom\"\n      , \"Batu\"\n      , \"Julia\"\n      , \"Melisa\"\n      , \"John\"\n    ]\n  }\n  , {\n    winner: \"Harry\"\n    , players: [\n      \"Harry\"\n      , \"hermione\"\n      , \"Ron\"\n    ]\n  }\n];\n\nconst App = () => {\n\n  const [gameResults, setGameResults] = useState<GameResult[]>([]);\n\n  const addNewGameResult = (result: GameResult) => setGameResults(\n    [\n      ...gameResults\n      , result\n    ]\n  );\n\n  const router = createHashRouter([\n    {\n      path: \"/\",\n      element: <Home\n        leaderboardData={getLeaderboard(gameResults)}\n      />\n    },\n    {\n      path: \"/setup\",\n      element: <Setup />\n    },\n    {\n      path: \"/play\",\n      element: <Play\n        addNewGameResult={addNewGameResult}\n      />\n    },\n  ]);\n\n  return (\n    <div\n      className=\"App p-3\"\n    >\n      <RouterProvider\n        router={router}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,WAAW;AAClB,SACEC,gBAAgB,EAChBC,cAAc,QACT,kBAAkB;AACzB,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,KAAK,QAAQ,SAAS;AAC/B,SAAqBC,cAAc,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,gBAA8B,GAAG,CACrC;EACEC,MAAM,EAAE,KAAK;EACXC,OAAO,EAAE,CACT,KAAK,EACH,MAAM,EACN,OAAO,EACP,QAAQ,EACR,MAAM;AAEZ,CAAC,EACC;EACAD,MAAM,EAAE,MAAM;EACZC,OAAO,EAAE,CACT,MAAM,EACJ,OAAO,EACP,QAAQ,EACR,MAAM;AAEZ,CAAC,EACC;EACAD,MAAM,EAAE,MAAM;EACZC,OAAO,EAAE,CACT,KAAK,EACH,MAAM,EACN,OAAO,EACP,QAAQ,EACR,MAAM;AAEZ,CAAC,EACC;EACAD,MAAM,EAAE,OAAO;EACbC,OAAO,EAAE,CACT,OAAO,EACL,UAAU,EACV,KAAK;AAEX,CAAC,CACF;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAe,EAAE,CAAC;EAEhE,MAAMgB,gBAAgB,GAAIC,MAAkB,IAAKF,cAAc,CAC7D,CACE,GAAGD,WAAW,EACZG,MAAM,CAEZ,CAAC;EAED,MAAMC,MAAM,GAAGjB,gBAAgB,CAAC,CAC9B;IACEkB,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEZ,OAAA,CAACL,IAAI;MACZkB,eAAe,EAAEf,cAAc,CAACQ,WAAW;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C;EACH,CAAC,EACD;IACEN,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAEZ,OAAA,CAACH,KAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACnB,CAAC,EACD;IACEN,IAAI,EAAE,OAAO;IACbC,OAAO,eAAEZ,OAAA,CAACJ,IAAI;MACZY,gBAAgB,EAAEA;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EACH,CAAC,CACF,CAAC;EAEF,oBACEjB,OAAA;IACEkB,SAAS,EAAC,SAAS;IAAAC,QAAA,eAEnBnB,OAAA,CAACN,cAAc;MACbgB,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAZ,EAAA,CAvCKD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAyCT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}